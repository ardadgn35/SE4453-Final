name: CI/CD for .NET App

# Workflow, push ve pull request olaylarına yanıt olarak tetiklenecek
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Job 1: Docker imajını oluşturma ve ACR'ye push etme
  build:
    runs-on: ubuntu-latest  # GitHub Actions'ın Ubuntu ortamında çalışmasını sağlar
    
    steps:
    - name: Check out the repository
      uses: actions/checkout@v2  # Repository'yi çekmek için action

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2  # Docker Buildx kurar

    - name: Log in to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.ACR_LOGIN_SERVER }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Build and push Docker image
      run: |
        docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/projedotv2:latest .
        docker push ${{ secrets.ACR_LOGIN_SERVER }}/projedotv2:latest

  # Job 2: Azure Web App'e deploy etme
  deploy:
    runs-on: ubuntu-latest  # GitHub Actions'ı Ubuntu ortamında çalıştır
    needs: build  # Build job'ının başarılı olmasını bekler

    steps:
    - name: Check out the repository
      uses: actions/checkout@v2  # Repository'yi çekmek için action

    - name: Azure WebApp Publish Profile
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'finaldotproje'  # Web App'in adı
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: '.'  # Package'in bulunduğu klasör
